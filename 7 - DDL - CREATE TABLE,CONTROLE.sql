----------DDL

--nome da tabela começa com letra, _ e número pode ser utilizado depois da primeira letra.
--não são todos caracteres especiais aceitos no nome da tabela
--PERMITIDOS: _ $ #
--Limite de tamanho: 30 caracteres para criação da tabela

--copiar tabela com where 1=2 copia toda a estrutura
CREATE TABLE copy_funcionarios2 AS
SELECT *
FROM funcionarios
WHERE 1=2;

--copiar sem where, copia estrutura e os dados
CREATE TABLE copy_funcionarios2 AS
SELECT *
FROM funcionarios;

--precisa ter pelo menos 1 coluna
CREATE TABLE produtos(
ID number(11)
);

--pega todas as tabelas do usuário;
select table_name from user_tables;

--forçar nome case sensitive 
create table "Produto" (id number(12));

-- SE CRIAR COM 'ASPAS' SEMPRE VAI PRECISAR USAR "ASPAS" ao mencionar tabela "Produto"

--EXEMPLO PARA AULA
create table pedidos (
id number(11),
status varchar2(30));
insert into pedidos (id,status) values (1,null);

--apaga tabela
drop table pedidos;

--valor padrão no status
create table pedidos (
id number(11),
status varchar2(30) default 'pendente' );

insert into pedidos (id,status) values (1,null);
insert into pedidos (id,status) values (3, default);

drop table pedidos;

--quando a query passar nulo, vai trocar por pendente
create table pedidos(
id number(11),
status varchar2(30) default on null 'pendente');

insert into pedidos (id,status) values (1,null);

---------------------------------------
--CRIAR SEQUENCIA

--toda sequencia precisa ter um nome
CREATE SEQUENCES autoid;

--verifica sequencia atual
select autoid.currval from dual;
--informa próximo valor da sequencia
select autoid.nextval from dual;

--criando tabela com seq
create table pedidos (
id number(11) default autoid.nextval,
valor number(10,2));

--conseguimos inserir valores nulos
insert into pedidos(id, valor) values (null,24);

--
create table pedidos (
id number(11) default on null autoid.nextval,
valor number(10,2));

--sequencia começa com 50 e incrementa 5
create sequence seria start with 50 increment by 5;

--não aceitar valores nulos, mas aceita valor repedido
create table pedidos(
id number(11) generated by default as identity,
valor number(10,2));

--não aceita nulos e valores inseridos, valor será gerado
create table pedidos(
id number(11) generated always as identity,
valor number(10,2));


-----------------Comentários nas tabelas
--comentar tabela
comment on table pedidos is 'Tabela que salva todos os pedidos do sistema';

--view para ver os comentarios;
desc user_tab_comments;

--ver os comentarios dos pedidos;
select * from user_tab_comments where table_name = 'Pedidos';

--comentar coluna
comment on column pedidos.valor is 'Coluna que salva o valor total do pedido';

select comments, column_name from user_col_comments where table_name = 'Pedidos';

--copia a tabela igualzinho a tabela pedidos
create table pedidos_backup as select * from pedidos;
create table pedidos_estrutura as select * from pedidos where 1=2;

--com alias
create table novos_pedidos as select id, valor valorTotal from pedidos;

desc novos_pedidos;

--------------------------alterando tabelas existentes

--adicionou a coluna
alter table pedidos add (
observacao varchar2(20)
);

--adiciona coluna sem aceitar nulo
alter table pedidos add (
cliente_id_number(11) default '1' not null)
);

--mais de uma coluna
alter table pedidos add(
valor_desconto number(10,2),
valor_frete number(10,2));

--altera coluna observacao
alter table pedidos modify observacao varchar2(30);
alter table pedidos modify observacao char(30);
alter table pedidos modify observacao char(10);

--a tabela não altera se os dados estiverem maior
--não perde informações no banco
--se alterar para maior irá consumir todo o espaço definido
alter table pedidos modify valor number(1);


--criar tabela para testes
create table pedidos 
(
id number(11) generated always as identity,
valor number(10,2),
obs varchar2(20)
);

--renomear coluna
alter table pedidos rename column valor to valor_bruto;

--alterar coluna para invisível
alter table modify obs insisible;

--on/off para colunas invisiveís
set colinvisible off;

--insere valor em coluna invisível, porém não aparece no select *
insert into pedidos(valorbruto, obs) values(100,'Pedido Inicial');
select * from pedidos;

--coluna não é mais utilizada
--oracle altera a coluna para invisible e nome diferente, sem poder inserir dados
alter table pedidos set unused column obs;

--apaga colunas qua não são mais utilziadas
alter table pedidos drop unused column;

--altera nome da tabela
alter table pedidos rename to pedido;
renam pedido to pedidos;

--apaga a tabela
drop table pedidos;


--Quando não definimos um comprimento para uma coluna do tipo char qual é o valor padrão assumido?
--1